<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskBoss1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 5;
maxHp = 5;
state = s.WALK;
dir = d.LEFT;

xVel = 0;
yVel = 0;
yGrav = .15;

d_xscale = 1;
d_t = 0;
d_angle = 0;
d_offy = 0;

onGround = false;
turnTimer = 0;
stateTimer = 180;
jumps = 0;
xo = x;
yo = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_activate_region(bbox_left - 2*view_wview, view_yview, 4*view_wview, view_hview, 1);

y = min(y, yo);
onGround = y == yo;

onWall = place_meeting(x + sign(dir), y, objSolid);
turnTimer = max(turnTimer - 1, 0);
stateTimer = max(stateTimer - 1, 0);

d_sin = sin(d_t);
d_angle = 360 + 10 * d_sin;
d_offy = -2 * abs(d_sin);
d_xscale = min(1, max(d_xscale + sign(dir) * .3, -1));

var e = instance_place(x, y, objEnemy);

if(keyboard_check_pressed(ord('K'))) {
    hp = 0;
}

// hurt impulse
if (e &amp;&amp; e.state == s.TOSS) {
    hp = max(hp - 1, 0);
    state = s.HURT;
    xVel = sign(x - e.x) * 3;
    yVel = -2;
    onGround = false;
    stateTimer = 60;
    
    // death to all enemies
    for(var i = 0; i &lt; instance_number(objEnemy); i++) {
        var ei = instance_find(objEnemy, i);
        if (ei) with (ei) {
            instance_create(x, y, objBubblePop);
            instance_destroy();
        }
    }

}

if (hp == 0) {
    if (state != s.DEAD) {
        stateTimer = 90;
        state = s.DEAD;
        
        var i = 0;
        repeat(4) {
            var flash = instance_create(x, y, objFlash);
            flash.delay = i * 15 + i * 10;
            i++;
        }
    }
}
if (state == s.DEAD) {
    d_t = 0;
    xVel = 0;
    yVel = 0;
    if(stateTimer % 10 == 0) {
        var eff = instance_create(x - T + random(2*T), y - T + random(2*T), objEffect);
    }

    if(!stateTimer) {
        instance_destroy();
    }
}

// knockback
if (state == s.HURT) {

    dir = sign(objPlayer.x - x);
    
    if (onGround || onWall) {
        d_t = 0;
        xVel = 0;        
    }
    
    if (!stateTimer) {
        state = s.WALK;
        stateTimer = 120;        
    }
}

// walk
if (state == s.WALK) {
    if (!onGround) xVel = 0;
    else {
        if (!onWall) {
            xVel = sign(dir) * min(abs(xVel) + .02, 1);
        }
    }
    
    var _dir = sign(xVel);
    if (_dir != 0)
        dir = _dir;

    dx = max(abs(xVel) * .2, .2);
    if (!onWall)
        d_t = (d_t + sign(dir)* dx) % (2*pi);
    else {
        d_t = 0;
    }
}

// shoot projectiles
if (state == s.TOSS) {
    dir = sign(objPlayer.x - x);
    if (onGround) {
        onGround = false;
        yVel = choose(0, -1.5,-2.5,-3.6);
        
        if (!stateTimer) {
            y = yo;
            yVel = 0;
            stateTimer = 120;
            state = s.JUMP;
        }

    }
    xVel = 0;
    d_t = 0;
    if (stateTimer % 30 == 0 &amp;&amp; stateTimer &gt; 0) {
        var proj = instance_create(x, y, objEnemyProjectile);
        proj.killOutsideView = false;
        proj.type = 0;
        proj.dir = dir;
    }
}

// jump &amp; spawn enemy
if (state == s.JUMP) {
    x += sign(dir) * .1;
    if (stateTimer &lt; 90) {
    d_t = 0;
        xVel = sign(dir) * .75;
        if (onGround) {
            jumps --;
            onGround = false;
            if(jumps) {
                yVel = -3;
            }
            if (!jumps) {
                stateTimer = 180;
                state = s.WALK;
                xVel = 0;
                
                // kill the old
                with(objEnemy) {
                    instance_create(x, y, objBubblePop);
                    instance_destroy();
                }
                
                c_out("creating enemy");
                var eff = instance_create(xo, yo + 8, objEffect);
                var e = instance_create(xo, yo + 8, objEnemy);
                e.type = 7;
                path_set_kind(e.path, 0);
                path_set_precision(e.path, 0);
                path_set_closed(e.path, 0);
                e.path_spd = 1;
                e.dir = dir;
                e.movePattern = 2;
            }
        }
    }
} else {
    jumps = maxHp - hp + 2;
}

// movement

if (onGround) {
    yVel = 0;
    y = yo;
} else {
    yVel += yGrav;
    y += yVel;
}

if (onWall) {
    if (xVel != 0)
        turnTimer = 30;
    if (state == s.WALK &amp;&amp; !turnTimer) {
        x -= dir;
        dir = -dir;
        stateTimer = 60;
        state = s.TOSS;
    }
    xVel = 0;
} else {
    x += xVel;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (state == s.DEAD) exit;
draw_sprite_ext(mskBoss1, -1, x, y + d_offy, d_xscale, 1, d_angle, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
