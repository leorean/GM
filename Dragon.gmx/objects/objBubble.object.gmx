<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskBubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = d.RIGHT;
state = s.SHOOT;
xVel = 0;
yVel = 0;
spd = 2.5;
decay = 1;

d_scale = .5;
d_t = 0;
d_sin = 0;
xo = x;
yo = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d_scale = min(d_scale + .02, 1);

if(!in(x, view_xview, view_xview + view_wview)
    || !in(y, view_yview, view_yview + view_hview))
    instance_destroy();

if (state == s.SHOOT) {
    var xSpd = spd * decay;
    xVel = sign(dir) * xSpd;
    decay = max(decay - .05, 0);
    
    if (place_meeting(x + xVel, y + yVel, objSolid)
        || xSpd == 0) {
        xVel = 0;
        state = s.IDLE;
    }
}

if (state == s.IDLE) {
    d_t = (d_t + .03) % (2*pi);
    d_sin = sin(d_t);
    
    var d_sin2 = sin(d_t + .5 * pi);
    var x_mov = sign(dir) * .15 * d_sin; 
    if (!place_meeting(x + x_mov, y, objSolid))
        x += x_mov;
    y -= .1 * abs(d_sin2);
    
    if (place_meeting(x, y - 1, objSolid)) {
        state = s.POP;
    }
}

if (abs(y - yo) &gt; 2*T) state = s.POP;

if (state == s.POP) {
    // TODO: effect
    instance_destroy();
}

if (!place_meeting(x + xVel, y, objSolid)) {
    x += xVel;
} else {
    xVel = 0;
}

if (!place_meeting(x, y + yVel, objSolid)) {
    y += yVel;
} else {
    yVel = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(mskBubble, -1, x, y, d_scale, d_scale, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
