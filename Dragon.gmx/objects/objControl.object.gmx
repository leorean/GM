<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskTile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum d {LEFT = -1, RIGHT = 1, UP = -2, DOWN = 2}
enum s {IDLE, WALK, JUMP, JUMP2, SHOOT, POP, SWIM, DEAD, BUBBLE, TOSS}
enum w { NONE, RAIN, SNOW, SUN }
// ground: same move animation as player
// rotatewalk: same as ground but rotates with angle
// float: no rotation, no walk animation
// rotatefloat: rotation, no walk animation
enum m { WALK = 0, ROTATEWALK = 1, FLOAT = 2, ROTATEFLOAT = 3 }
enum a { NONE = 0, EARTH = 1, THUNDER = 2, SUN = 4, SKY = 8 }

randomize();
global.TW = background_get_width(sprTiles) / T;

//global.fntSmall = font_add_sprite(sprFontSmall, ord(' '), true, 0);
//global.fnt = font_add_sprite(sprFont, ord(' '), true, 1);

map1 = importLevel("map1.tmx");

// save/load vars

global.bubbles = 0;
global.ds_bubbles = ds_list_create(); // TODO: can be solved with mask, just like ability
global.spawn_x = -1;
global.spawn_y = -1;
global.spawn_dir = d.LEFT;
global.bg = -1;
global.weather = w.NONE;
global.ability = a.NONE;

// input vars

global.k_left = 0;
global.k_right = 0;
global.k_up = 0;
global.k_action = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(ord('R'))) room_restart();
if(keyboard_check_pressed(ord('Q'))) game_restart();
if(keyboard_check_pressed(ord('C'))) file_delete("save.dat");

if(keyboard_check_pressed(ord('P'))) {
    objPlayer.x = 2*T;
    objPlayer.y = 2*T;
}
if (keyboard_check_pressed(ord('7'))) {
    c_out("[ability: " + string(global.ability) +"]", hasAbility(a.NONE), 
        hasAbility(a.EARTH),
        hasAbility(a.THUNDER),
        hasAbility(a.SUN),
        hasAbility(a.SKY));
    global.ability++;
}

if (mouse_check_button_pressed(mb_right)) {
    objPlayer.x = mouse_x - 4 + 8 * sign(mouse_x &gt; (view_xview + .5* view_wview));//(abs(mouse_x - (view_xview + .5*view_wview)) &gt; (.5 * view_wview));
    objPlayer.y = mouse_y - 16 + 24 * sign(mouse_y &gt; (view_yview + .5* view_hview));//(abs(mouse_y - (view_yview + .5*view_hview)) &gt; (.5 * view_hview));
}

if (keyboard_check(vk_space)) {
    room_speed = 10;
} else {
    room_speed = 60;
}

// input

global.k_left = keyboard_check(vk_left);
global.k_right = keyboard_check(vk_right);
global.k_up = keyboard_check_pressed(vk_up);
global.k_action = keyboard_check_pressed(ord('S')) || keyboard_check_pressed(vk_down);


// instance mgmnt

instance_deactivate_object(objAny);
instance_activate_region(view_xview - T, view_yview - T, view_wview + 2*T, view_hview + 2*T, 1);

instance_deactivate_object(objBigBlock);
instance_activate_region(view_xview, view_yview, view_wview, view_hview, 1);

global.bubbles = ds_list_size(global.ds_bubbles);
global.timer = (global.timer + 1) % INF;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.timer = 0;
/*for(var gp = 0; gp &lt; ds_list_size(global.paths); gp++) {
    var pth = ds_list_find_value(global.paths, gp);
    path_delete(pth);
}
ds_list_clear(global.paths);*/

load();
createLevel(map1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
