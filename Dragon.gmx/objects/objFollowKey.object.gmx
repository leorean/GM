<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKey</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
depth = objPlayer.depth - 1;
angle = 0;
t_angle = 0;
t = 0;

active = false;
instance_create(x, y, objEffect);

glow = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, objBubblePop);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (distance_to_object(objPlayer) &gt; 6*T) {
    x = objPlayer.x - sign(objPlayer.dir)*T;
    y = objPlayer.y;
}

t = (t + .1) % (2*pi);
tx = objPlayer.x - sign(objPlayer.dir) * T;
ty = objPlayer.y + sin(t) * 4;;

var fk = instance_place(x, y, objFollowKey);
if (fk) {
    ang = point_direction(fk.x, fk.y, x, y);
    x += lengthdir_x(.2, ang);
    y += lengthdir_y(.2, ang);    
}

minDist = 999;
kx = tx;
ky = ty;
for (var i = 0; i &lt; instance_number(objKeyBlock); i++) {
    var kb = instance_find(objKeyBlock, i);
    if (distance_to_object(kb) &lt; 3*T &amp;&amp; distance_to_object(kb) &lt; minDist) {
        minDist = distance_to_object(kb);
        kx = kb.x + 8;
        ky = kb.y + 8;
    }
}

active = (minDist &lt; 999);
for(var i = 0; i &lt; instance_number(objFollowKey); i++) {
    var fk = instance_find(objFollowKey, i);
    
    if (fk.id == id) continue;
    
    if (fk.active) {
        active = false;
        break;
    }
}

if (!active) {
    xVel = (tx - x) / 12;
    yVel = (ty - y) / 12;
    t_angle = 360 + point_direction(x, y, x + xVel, y + yVel + 3) + 90;
} else {
    xVel = (kx - x) / 48;
    yVel = (ky - y) / 48;
    t_angle = 360 + point_direction(x, y, x + xVel, y + yVel) + 90;
}

if (abs(angle - t_angle) &gt;= 180) {
    angle -= sign(angle - t_angle) * 360;
}
angle = 360 + (angle + (t_angle - angle) / 4) % 360;

x += xVel;
y += yVel;

activateGlow();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprKey, -1, x, y, 1, 1, angle, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
