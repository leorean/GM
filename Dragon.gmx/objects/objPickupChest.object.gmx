<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskTile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>objAny</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>identifier = -1;
value = 0;
type = 0;

open = false;
depth = LAYER_BG - 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_list_find_index(global.ds_chests, identifier) &gt; -1) {
    open = true;
}

if (outsideView()) exit;

if (type == 0) {
    var penalty = 0;
    var val = ds_map_find_value(global.ds_openchests, identifier);            
    if (val != undefined) {
        penalty = real(val);
    }
    
    if (value == penalty) {            
        ds_map_delete(global.ds_openchests, identifier);
        c_out("Finished open chest with id", identifier);            
        ds_list_add(global.ds_chests, identifier);
        c_out("Opened chest with id", identifier);
        exit;
    }
}

if (place_meeting(x, y, objPlayer) &amp;&amp; !open) {
    instance_create(x + 8, y + 8, objEffect);
    open = true;
    
    switch(type) {
        case 0: // coins        
            spawnCoins(x + 8, y + 8, value - penalty, id);    
        break;
        case 1: // HP chest
            var hpUp = instance_create(x + 8, y + 8, objPickupMaxHp);
            hpUp.chest = id;
        break;
        case 2: // key chest
            var key = instance_create(x + 8, y + 8, objPickupKey);
            key.chest = id;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var z = .6 + .2 * abs(sin(d_t3));
var zz = .5 + .1 * abs(sin(d_t3));

draw_set_blend_mode(bm_add);
draw_sprite_ext(sprLight, -1, x, y, z, z, 0, c_white, .05);
draw_sprite_ext(sprLight, -1, x, y, zz, zz, 0, c_white, .06);
draw_set_blend_mode(bm_normal);*/

/*if (random(30) &lt; 2) {
    var inst = instance_create(x - 5 + random(10), y - 5 + random(10), objSaveParticle);
    inst.yVel = .25;
}*/

draw_sprite_part(sprChest, -1, open * T, type*T, T, T, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
