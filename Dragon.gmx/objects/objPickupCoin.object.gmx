<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskCoin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAny</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fixed = true;
xVel = 0;
yVel = 0;
yGrav = .15;

frame = 0;
fCur = random(3);
t = random(2*pi);
y_spawn = y;
fSpeed = 0;

depth = LAYER_FG - 1;

taken = false;
chest = noone;
delay = -1;
alpha = 1;

type = 0;

identifier = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!taken &amp;&amp; ds_list_find_index(global.ds_coins, identifier) &gt; -1) {
    instance_destroy();
}

if (outsideView()) exit;

if (!taken) {

    if ((fixed || delay == 0) &amp;&amp; place_meeting(x, y, objPlayer) &amp;&amp; objPlayer.state != s.DEAD) {
        taken = true;
        
        if (chest != noone) {
            addCoinsFromType(type, chest.identifier);
        } else {
            addCoinsFromType(type, noone);
        }
        
        var eff = instance_create(x, y, objEffect);
        eff.type = 2;
        
        if (identifier != -1) {
            ds_list_add(global.ds_coins, identifier);
            c_out("Added coin with id", identifier);
        }

    }

    if (!fixed) {

        depth = LAYER_FG - 2;
        if (delay == -1) delay = 30;
        delay = max(delay - 1, 0);

        switch(type) {
            case 0: coinSize = 1; break;
            case 1: coinSize = 2; break;
            case 2: coinSize = 3; break;
            case 3: coinSize = 3; break;
            case 4: coinSize = 2; break;
            case 5: coinSize = 3; break;
            case 6: coinSize = 4; break;            
        }
        
        var xCol = collision_line(bbox_left + xVel, y, bbox_right + xVel, y, objSolid, 0, 1);
        var yCol = collision_line(bbox_left, y + coinSize + yVel, bbox_right, y + coinSize + yVel, objSolid, 0, 1);
        
        if (!xCol) {
            x += xVel;
        } else {
            xVel *= -.5;            
        }
        if (!yCol) {
            yVel += yGrav;
            y += yVel;
        } else {
            if (abs(yVel) &gt; .1) {
                yVel *= -.5;
                xVel *= .5;
            }
            else {
                yVel = 0;
                xVel = 0;
                
            }
        }
    } else { // float
        t = (t + .05) % (2*pi);
        y = y_spawn + 1.5 * sin(t);
    }
    yo = y;
    fSpeed = .11;
} else {
    if(instance_exists(objPlayer)) {
        depth = objPlayer.depth - 1;
    }
    y -= 1;
    fSpeed = .3;
    alpha = max(alpha - .02, 0);
    if (abs(y - yo) &gt; 1.5*T) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fCur = (fCur + fSpeed) % 4;
frame = floor(fCur);

draw_sprite_part_ext(sprCoins, -1, frame*T, type*T, T, T, x - 8, y - 9, 1, 1, c_white, alpha);

if (taken) {
    draw_sprite_part_ext(sprCoins, -1, 4*T, type*T, 2*T, T, x - T, (yo + y)/2 - 8, 1, 1, c_white, alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
