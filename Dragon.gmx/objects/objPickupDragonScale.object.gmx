<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskBubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>objAny</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>identifier = -1;

angle = 0;
sinVel = 0;
t = 0;

d_t1 = 0;
d_t2 = 0;
d_t3 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_list_find_index(global.ds_scales, identifier) &gt; -1) {
    instance_destroy();
}

if (place_meeting(x, y, objPlayer)) {
    ds_list_add(global.ds_scales, identifier);
    c_out("Got scale with id", identifier);    
    instance_create(x, y, objFlash);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d_t1 = (d_t1 + .07) % (2*pi);
d_t2 = (d_t2 + .12) % (2*pi);
d_t3 = (d_t3 + .04) % (2*pi);

t = (t + .03) % (2*pi);
sinVel = sin(t);
angle = (angle + sinVel * .5) % 360;
var d_offy = 2*sin(t);

var z = .6 + .2 * abs(sin(d_t3));
var zz = .5 + .1 * abs(sin(d_t3));

draw_set_blend_mode(bm_add);
draw_sprite_ext(sprLight, -1, x, y + d_offy, z, z, 0, c_white, .05);
draw_sprite_ext(sprLight, -1, x, y + d_offy, zz, zz, 0, c_white, .06);
draw_set_blend_mode(bm_normal);

if (random(30) &lt; 2) {
    var inst = instance_create(x - 5 + random(10), y - 5 + random(10), objSaveParticle);
    inst.yVel = .25;
}

draw_sprite_ext(sprDragonScale, -1, x, y + d_offy, 1, 1, 0, make_color_hsv(angle, (angle / 70) * 255, 255,), 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
