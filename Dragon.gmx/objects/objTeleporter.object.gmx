<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskTeleporter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = false;
autoActive = false;
alreadyEnabled = false;

identifier = -1;
frame = 0;
fCur = 0;
fSpeed = 0;
touched = 0;
pow = 0;

instance_create(x, y, objPlatform);
instance_create(x + T, y, objPlatform);
instance_create(x + 2*T, y, objPlatform);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alreadyEnabled &amp;&amp; ds_list_find_index(global.ds_teleporters, identifier) == -1) {
    ds_list_add(global.ds_teleporters, identifier);
    c_out("Activated teleporter with id", identifier);
}

if (!in(x, view_xview - 3*T, view_xview + view_wview + 3*T) 
    || !in(y, view_yview - T, view_yview + view_hview + T)) 
{
    visible = false;
    exit;
}
if (instance_exists(objPlayer))
    depth = objPlayer.depth - 1;
visible = true;

if (ds_list_find_index(global.ds_teleporters, identifier) &gt; -1) {
    active = true;
}

if (touched &gt; 0) {
    if (!place_meeting(x, y, objPlayer)) {
        touched = max(touched - 1, 0);
    }
}

if (active) {
    fSpeed = .6;
    
    if (random(10) &lt; 6) {
        var part = instance_create(x + 2 + random(3*T - 4), y, objParticleCurrent);
        part.yVel = -.2 - random(.5);
    }
    
    if (place_meeting(x, y - 1, objPlayer) 
        &amp;&amp; touched == 0
        &amp;&amp; ds_list_size(global.ds_teleporters) &gt; 1
        &amp;&amp; objPlayer.state == s.IDLE) {
        pow = min(pow + 2, 100);
        objPlayer.wPower = pow;
        
        if(random(10) &lt; 9) {
            instance_create(objPlayer.x - 8 + random(T), y, objSaveParticle);
        }
                
    } else {
        pow = max(pow - 2, 0);
        objPlayer.wPower = pow;
    }
    if (pow == 100) {
        with(objTeleporter) touched = 60;
        
        if(ds_list_size(global.ds_teleporters) &gt; 1) {
        
            var index = ds_list_find_index(global.ds_teleporters, identifier);
            var target = noone;
            var abort = 0;
            while (!instance_exists(target)) {    
                index = (index + 1) % ds_list_size(global.ds_teleporters);
                var targetIdentifier = ds_list_find_value(global.ds_teleporters, index);
                        
                for (var i = 0; i &lt; instance_number(objTeleporter); i++) {
                    var tel = instance_find(objTeleporter, i);                
                    if (tel == id) continue;
                    
                    if (tel.identifier == targetIdentifier) {
                        target = tel;
                        break;
                    }
                }
                abort++;                
                if (abort &gt;= instance_number(objTeleporter)) break;
            }
            global.keysEnabled = true;
            pow = 0;
            if (instance_exists(target)) {
                instance_create(x, y, objFlash);
                objPlayer.x = target.x + 24;
                objPlayer.y = target.y - 8;
                objCamera.x = ((objPlayer.x div view_wview) * view_wview) + .5 * view_wview;
                objCamera.y = ((objPlayer.y div view_hview) * view_hview) + .5 * view_hview;
            }
        }
    }
}

if(global.switchState == 1 || autoActive) {    
    fSpeed = min(fSpeed + .002, max(fSpeed, .4));    
    if (fSpeed == .4 &amp;&amp; !active) {
        instance_create(x, y, objFlash);
        ds_list_add(global.ds_teleporters, identifier);
        c_out("Activated teleporter with id", identifier);
    }
} else {
    if (!active)
        fSpeed = max(fSpeed - .002, 0);    
}

fCur = (fCur + fSpeed) % 4;
frame = floor(fCur);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha((pow - 50) / 50);
draw_set_color(c_white);
draw_rectangle(0, 0, view_wview, view_hview, 0);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_part(sprTeleporter, -1, frame*3*T, 0, 3*T, T, x, y);

if (pow &gt; 0) {
    draw_set_blend_mode(bm_add);
    draw_sprite_part_ext(sprTeleporter, -1, 12*T, 0, 3*T, T, x, y, 1, 1, c_white, pow / 100);

    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
